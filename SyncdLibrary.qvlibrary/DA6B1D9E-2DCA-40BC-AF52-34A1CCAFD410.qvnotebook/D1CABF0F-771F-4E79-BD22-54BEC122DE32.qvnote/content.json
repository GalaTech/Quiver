{
  "title": "Gigya Implementation Issues",
  "cells": [
    {
      "type": "markdown",
      "data": "Implementing Gigya poses a handful of interesting problems.\n\nAdding a functional and reliable signup, login, and logout system is definitely time consuming problem. You need to ensure a users' session is persisted between opening the app along with guaranteeing their session is truly cancelled after they log out. You do not want a user to log out, another user to login, and then have persisting data from the previous users' session. \n\nThe most difficult piece of functionality to implement is the favorites syncing. Coming up with a solid syncing strategy that works cross platform with minimal data loss is quite the effort. Imagine trying to put together a syncing strategy similar to Google Drive, Dropbox, or iCloud. You need to have a high guarantee that user data will persist correctly and not get overridden, or else your risk severe backlash from the userbase. Not only was there a lot of time spent thinking up a solid syncing strategy, but having to splice that into an existing code base that worked entirely differently took immense amounts of thinking and effort. \n\nYou can apply a similar train of thought to the additional functionality MLS is looking to add e.g. comments. Adding functionality that takes place across the server and needs to have a high guarantee of success across devices results in a lot of time needed to think about the many edge cases that can pop up. \n\nSome of the other issues we ran into had to deal with setting up the Gigya web console correclty. Getting a database scheme setup for favorites syncing is definitely an effort and is not a simple drop in type of system. It will require contact with a Gigya engineer to setup properly. \n\nEach of the different social networks the desire to have in the app also requires being setup in the web console for each specific social network, facebook, google+, etc. Not only do you need to have the gigya sdk inside of the app, you also need the sdk for both Facebook and Google+, which adds additional complexity. You need to set both up correctly or else those forms of login will not work at all. \n\nSo now on top of all this immense amount of work having to deal with a broken SDK makes everything much more difficult. I had to spend countless hours testing my code to make sure it was indeed an issue on the Gigya side rather than my own. When you are needing to implement something as intricate as this it is quite the pain to test successfully when you can't guarantee the service is even working. "
    }
  ]
}